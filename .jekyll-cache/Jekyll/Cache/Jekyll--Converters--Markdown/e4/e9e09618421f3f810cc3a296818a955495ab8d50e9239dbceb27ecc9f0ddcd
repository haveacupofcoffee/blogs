I"π
<p>Hej,Hej, geeks and nerds. This is an introduction about how to run your
first flask application on AWS EC2.Since cloud service is very popular nowadays
and AWS offers free trial service for individuals. So you are going to use AWS EC2
as your server and your computer as client to access the flask applicaton deployed on EC2.</p>

<h3 id="1start-with-aws-ec2">1.Start with AWS EC2</h3>
<p>To use AWS EC2, follow the guide below:
<a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html#ec2-connect-to-instance-linux">https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/EC2_GetStarted.html#ec2-connect-to-instance-linux</a><br />
Here I am using AMI as below, as you can see, there are many tools which have been installed already.
<img src="/assets/images/2019-01-20/1.png" alt="" />
Choose the free Instance:
<img src="/assets/images/2019-01-20/2.png" alt="" />
Make sure HTTP and SSH is available for connection
<img src="/assets/images/2019-01-20/3.png" alt="" />
Then launch the instance, you may need to create a new key pair for security if
you don‚Äôt have one when you launch it.</p>

<h3 id="2-gitbash">2. Gitbash</h3>
<p>To access the AWS EC2 instance we just created, you need a tool that supports
SSH conneciton. Here I am using Git Bash, it is just one feature of Git.
You could download Git from website <a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> according to
the OS you are using on your computer. After you install Git, you could type
git in your seach bar or right click on the desktop and choose Git Bash Here.
<img src="/assets/images/2019-01-20/4.png" alt="" />
Now you can access AWS EC2 instance by type ssh command as below:
<img src="/assets/images/2019-01-20/5.png" alt="" />
The <code class="highlighter-rouge">myaws.pem</code> file is my key pair file, need to put the absolute path of this
file here if you didn‚Äôt move into the parent folder of this pem file.</p>

<h3 id="3-magic-python">3. Magic Python</h3>
<p>You may remember when I chose AMI for AWS EC2Ôºå I mentioned that it contained
some tools‚Äô packeges already. Python is one of them. If you type <code class="highlighter-rouge">python --version</code>,
it shows the version of python. Here the pre-installed python version is <code class="highlighter-rouge">2.7.14</code> as shown below.
<img src="/assets/images/2019-01-20/6.png" alt="" />
I will use the latest version of python3 here. There are many ways to install
python under Linux. Here I will use the <code class="highlighter-rouge">wget</code> command to download python 3.7.2
package then install it. Before you install python, I recommand you to change to
<code class="highlighter-rouge">root</code> user with command <code class="highlighter-rouge">sudo su</code>(The images below may not show that I was using root user).</p>
<ul>
  <li>download
<code class="highlighter-rouge">wget wget https://www.python.org/ftp/python/3.7.2/Python-3.7.2.tgz</code></li>
  <li>unzip
<code class="highlighter-rouge">tar -zxvf Python-3.7.2.tgz</code></li>
  <li>Configure
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cd Python-3.7.2  
./configure
</code></pre></div>    </div>
    <p>Note : you may meet the ‚Äúno acceptable C compiler found in $PATH ‚Äú error as below :
<img src="/assets/images/2019-01-20/7.png" alt="" /><br />
In this case , you need to install C compilers first:
<code class="highlighter-rouge">yum install make gcc gcc-c++</code>
<img src="/assets/images/2019-01-20/8.png" alt="" /><br />
Then run <code class="highlighter-rouge">./configure</code> again.
when you run <code class="highlighter-rouge">./configure</code>, you need to answer a question. Type <code class="highlighter-rouge">y</code>.
<img src="/assets/images/2019-01-20/9.png" alt="" /><br /></p>
  </li>
  <li>compile and install
    <div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>make
make install
</code></pre></div>    </div>
    <p>after you finish, type <code class="highlighter-rouge">python3 --version</code> in the command line. You should see the new python version you installed.
<img src="/assets/images/2019-01-20/10.png" alt="" /><br />
If it shows command not found error. You need to edit the PATH variable.
For me my python3 command is in the path <code class="highlighter-rouge">/usr/local/bin</code>, so I need to add this path to PATH variable. One way to do this:
<code class="highlighter-rouge">vim ~/.bashrc</code>
then add <code class="highlighter-rouge">export PATH=/usr/local/bin:$PATH</code> at the end of the file, save the file.
then run the command <code class="highlighter-rouge">source ~/.bashrc</code>, then try <code class="highlighter-rouge">python3 --version</code></p>
  </li>
</ul>

<h3 id="4-flask-framework">4. flask framework</h3>
<p>Flask is a framework used to develope Web applicatons with Python. You could install flask
in a virtual environment. But here I will just install it directly. I need to remind you that you may have
two verions of python installed in your system, and you want to work on flask with the newest python3. So you need to install
flask with command <code class="highlighter-rouge">python3 -m pip install flask</code>(use user root)
Then try <code class="highlighter-rouge">flask --version</code> to check if you installed flask successfully.<br />
<img src="/assets/images/2019-01-20/11.png" alt="" /><br /></p>

<h3 id="5-run-your-first-flask-applicaton">5. Run your first flask applicaton</h3>
<p>To run your first flask application, you need to have an flask applicaton first, here I created a python file
named <code class="highlighter-rouge">hellotest.py</code>:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="n">from</span> <span class="n">flask</span> <span class="n">import</span> <span class="no">Flask</span>

<span class="n">app</span> <span class="o">=</span> <span class="no">Flask</span><span class="p">(</span><span class="n">__name__</span><span class="p">)</span>

<span class="vi">@app</span><span class="p">.</span><span class="nf">route</span><span class="p">(</span><span class="s2">"/"</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">index</span><span class="p">()</span> <span class="p">:</span>
    <span class="k">return</span> <span class="s2">"&lt;h1&gt;Hello world!&lt;/h1&gt;"</span>

<span class="vi">@app</span><span class="p">.</span><span class="nf">route</span><span class="p">(</span><span class="s2">"/user/&lt;name&gt;"</span><span class="p">)</span>
<span class="k">def</span> <span class="nf">user</span><span class="p">(</span><span class="nb">name</span><span class="p">):</span>
    <span class="k">return</span> <span class="s2">"&lt;h1&gt;hello,{}&lt;/h1&gt;"</span><span class="p">.</span><span class="nf">format</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span></code></pre></figure>

<p>first run command <code class="highlighter-rouge">export FLASK_APP=hellotest.py</code>, then run <code class="highlighter-rouge">flask run -h 0.0.0.0 -p 80</code>,
it shows information like below:<br />
<img src="/assets/images/2019-01-20/12.png" alt="" /><br /></p>

<p>Then open a browser in your computer and access the flask applicaton with AWS EC2 IPv4 public IP address(for me its http://35.183.77.241/ ):
<img src="/assets/images/2019-01-20/13.png" alt="" /><br /> <br />
<img src="/assets/images/2019-01-20/14.png" alt="" /><br /> 
VoilaÔºÅ You did it, now you can get your ass on the boat and enjoy the journey of flask!</p>
:ET